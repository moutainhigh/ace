<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.wxiaoqi.security.app.mapper.BizProductOrderDetailMapper">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.github.wxiaoqi.security.app.entity.BizProductOrderDetail" id="bizProductOrderDetailMap">
        <result property="id" column="id"/>
        <result property="orderId" column="order_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="detailStatus" column="detail_status"/>
        <result property="detailRefundStatus" column="detail_refund_status"/>
        <result property="tenantId" column="tenant_id"/>
        <result property="productId" column="product_id"/>
        <result property="productName" column="product_name"/>
        <result property="specId" column="spec_id"/>
        <result property="specName" column="spec_name"/>
        <result property="specImg" column="spec_img"/>
        <result property="quantity" column="quantity"/>
        <result property="salesPrice" column="sales_price"/>
        <result property="totalPrice" column="total_price"/>
        <result property="unit" column="unit"/>
        <result property="commentStatus" column="comment_status"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="modifyBy" column="modify_by"/>
        <result property="modifyTime" column="modify_time"/>
        <result property="deleteTime" column="delete_time"/>
    </resultMap>

    <select id="selectSalesQuantityByParentId"
            resultType="com.github.wxiaoqi.security.app.vo.order.out.OrderDetailSalesQuantity">
        select
            order_id orderId,parent_id parentId, id orderDetailId,product_id productId, spec_id specId,quantity
        from biz_product_order_detail
        where parent_id = #{parentId} and status = '1'

    </select>
    <update id="updateOrderDetailStatusByOrderId">
        update biz_product_order_detail set detail_status = #{targetStatus} ,modify_by = #{modifyBy}
        where order_id = #{orderId} and detail_status = #{sourceStatus}
        <if test="odIdList != null and odIdList.size  > 0" >
            and id in
            <foreach collection="odIdList" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
         and status = '1'
    </update>
    <update id="updateOrderDetailBySplitOrder">
        update biz_product_order_detail set order_id = #{targetOrderId},detail_status = #{detailStatus},
        modify_by = "splitOrder" where order_id = #{sourceOrderId} and tenant_id = #{tenantId} and status= '1'
    </update>

    <select id="selectUnCommentDetailIdList" resultType="string">
        select id from biz_product_order_detail
        where order_id = #{orderId} and comment_status = '0' and status ='1' and detail_refund_status = 0
    </select>
    <update id="updateCommentStatusByOrderId">
        update biz_product_order_detail set comment_status = #{commentStatus},detail_status = 35 ,modify_by = #{modifyBy}
        where order_id = #{orderId}
        <if test="odIdList != null and odIdList.size  > 0" >
            and id in
            <foreach collection="odIdList" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        and status ='1'
    </update>

    <resultMap id="ProductOrderTenantInfoResultMap" type="com.github.wxiaoqi.security.app.vo.order.out.ProductOrderTenantInfo">
        <result column="tenant_id" property="tenantId"/>
        <result column="tenant_name" property="tenantName"/>
        <result column="remark" property="remark"/>
        <result column="invoice_name" property="orderInvoice.invoiceName"/>
        <result column="invoice_type" property="orderInvoice.invoiceType"/>
        <result column="duty_code" property="orderInvoice.dutyCode"/>
        <collection property="productList"
                    ofType="com.github.wxiaoqi.security.app.vo.order.out.ProductOrderTenantProductInfo">
            <result column="product_id" property="productId"/>
            <result column="product_name" property="productName"/>
            <result column="spec_id" property="specId"/>
            <result column="spec_name" property="specName"/>
            <result column="spec_img" property="specImg"/>
            <result column="sales_price" property="salesPrice"/>
            <result column="quantity" property="quantity"/>
            <result column="unit" property="unit"/>
        </collection>
        <collection property="discountList"
                    ofType="com.github.wxiaoqi.security.app.vo.order.out.ProductOrderDiscountInfo">
            <result column="discount_type" property="discountType"/>
            <result column="discount_price" property="discountPrice"/>
            <result column="relation_id" property="relationId"/>
        </collection>
        <collection property="incrementList"
                    ofType="com.github.wxiaoqi.security.app.vo.order.out.ProductOrderIncrementInfo">
            <result column="increment_type" property="incrementType"/>
            <result column="increment_price" property="price"/>
        </collection>

    </resultMap>
    <select id="selectProductOrderTenantInfoList" resultMap="ProductOrderTenantInfoResultMap">

        SELECT
            od.order_id,od.tenant_id,t.`name` tenant_name, remark.remark,
            od.product_id,od.product_name,od.spec_id,od.spec_name,od.spec_img,od.sales_price,od.quantity,od.unit,
            invoice.invoice_name,invoice.invoice_type,invoice.duty_code,
            discount.discount_type,discount.discount_price,discount.relation_id,
            inc.increment_type,inc.price increment_price
        FROM
            biz_product_order_detail od
        LEFT JOIN base_tenant t on od.tenant_id = t.id
        LEFT JOIN biz_order_remark remark on (remark.order_id = od.order_id and remark.tenant_id = od.tenant_id and remark.status = '1')
        LEFT JOIN biz_order_invoice invoice on (invoice.order_id = od.order_id and invoice.tenant_id = od.tenant_id and invoice.status = '1')
        LEFT JOIN biz_product_order_discount discount on (discount.order_id = od.order_id and discount.tenant_id = od.tenant_id and discount.status = '1')
        LEFT JOIN biz_order_increment inc on (inc.order_id = od.order_id and inc.tenant_id = od.tenant_id and inc.status ='1')
        where od.order_id = #{orderId} and od.status ='1'
        ORDER BY od.product_name

    </select>

    <update id="updateRefundStatusByOrderId">
        update biz_product_order_detail set detail_refund_status = #{refundStatus} ,modify_by = #{modifyBy}
        where order_id = #{orderId}
        <if test="odIdList != null and odIdList.size  > 0" >
            and id in
            <foreach collection="odIdList" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
         and status = '1'
    </update>

    <select id="selectByOrderId" resultMap="bizProductOrderDetailMap">
        select
            `id`, `order_id`,parent_id, `detail_status`, `detail_refund_status`, `tenant_id`,
            `product_id`, `product_name`, `spec_id`, `spec_name`, `spec_img`, `quantity`,
            `sales_price`, `total_price`, `unit`, `comment_status`, `status`
         from biz_product_order_detail
         where order_id = #{orderId} and status = '1'
    </select>
    <select id="selectByParentId" resultMap="bizProductOrderDetailMap">
        select
            `id`, `order_id`,parent_id, `detail_status`, `detail_refund_status`, `tenant_id`,
            `product_id`, `product_name`, `spec_id`, `spec_name`, `spec_img`, `quantity`,
            `sales_price`, `total_price`, `unit`, `comment_status`, `status`
         from biz_product_order_detail
         where parent_id = #{parentId} and status = '1'
    </select>

    <update id="updateDetailStatusAndRefundStatus">
        update biz_product_order_detail
        <set>
         detail_status = #{detailStatus},
         detail_refund_status = #{refundStatus},
         modify_by = #{modifyBy}
        </set>
        where
        order_id = #{orderId}
        <if test="odIdList != null and odIdList.size > 0">
            and id in
            <foreach collection="odIdList" item = "id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        and status = '1'
    </update>
</mapper>